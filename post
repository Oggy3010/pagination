Hi. Today we will create pagination for your custom collection.
At first I would say what it easy, just follow this instruction.
That's how it will be look out: 
(picture)
We should have layout,template file in your theme. That two files name will be, for example, "pagination.xml(.phtml).
In config.xml write this code:
<?xml version="1.0"?>
<config>
    <modules>
        <Pagination_Namespace>
            <version>1.0</version>
        </Pagination_Namespace>
    </modules>
    <frontend>
        <routers>
            <pagination_namespace>
                <use>standard</use>
                <args>
                    <module>Pagination_Namespace</module>
                    <frontName>namespace</frontName>
                </args>
            </pagination_namespace>
        </routers>
        <layout>
            <updates>
                <pagination_namespace>
                    <file>pagination.xml</file>
                </pagination_namespace>
            </updates>
        </layout>
    </frontend>
    <global>
        <blocks>
            <pagination_namespace>
                <class>Pagination_Namespace_Block</class>
            </pagination_namespace>
        </blocks>
        <helpers>
            <pagination_namespace>
                <class>Pagination_Namespace_Helper</class>
            </pagination_namespace>
        </helpers>
    </global>
</config>

pagination.xml code:
<?xml version="1.0"?>
<layout>
    <pagination_namespace_index_index>
        <reference name="content">
            <block type="pagination_namespace/block" name="block"></block><!-- here, we include block file -->
        </reference>
    </pagination_namespace_index_index>
</layout>

On this code "<pagination_namespace_index_index>", we said system path to controller action. And here code of this action:

<?php

class Pagination_Namespace_IndexController extends Mage_Core_Controller_Front_Action
{
    public function indexAction()
    {
        $this->loadLayout();
        $this->renderLayout();
    }

}

Block Code:
<?php

class Pagination_Namespace_Block_Block extends Mage_Catalog_Block_Product_Abstract
{
    protected function _construct()
    {
        parent::_construct();
        $collection = Mage::getResourceModel('catalog/product_collection');// I hope I you have already own collection
        $this->setCollection($collection);
        $this->setTemplate('namespace/pagination.phtml'); // here we include template to project
    }

    protected function _prepareLayout()
    {
        parent::_prepareLayout();
        $pager = $this->getLayout()->createBlock('page/html_pager', 'custom.pager'); // getting core block "pager"
        $pager->setAvailableLimit(array(1=>1,2=>2,3=>3,'all'=>'all')); // set numbering for our pagination
        $pager->setCollection($this->getCollection());
        $this->setChild('pager', $pager);
        $this->getCollection()->load();
        return $this;
    }

    public function getPagerHtml()
    {
        return $this->getChildHtml('pager'); // we will call this method from template
    }

}
And the last step...get it all in template.

template.phtml code:
<?php
$collection = $this->getCollection();
echo $this->getPagerHtml();
if ($collection->getData() !== null) : $collection->getSize();// check if there is something in our collection, if yes - show content with pagination  for content
?>
    <table>
        <?php foreach($collection as $value) :?>
            <tr>
                <td><h1><?php echo $value->getSku() ?></h1></td>
            </tr>
        <?php endforeach ?>
    </table>
<?php endif;

Fter that, go on this URL in your project http://project.com/namespace/